"use strict";(self.webpackChunktenet_docs=self.webpackChunktenet_docs||[]).push([[16],{3905:(e,t,n)=>{n.d(t,{Zo:()=>u,kt:()=>m});var r=n(7294);function i(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){i(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,i=function(e,t){if(null==e)return{};var n,r,i={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},h="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,i=e.mdxType,a=e.originalType,l=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),h=s(n),d=i,m=h["".concat(l,".").concat(d)]||h[d]||p[d]||a;return n?r.createElement(m,o(o({ref:t},u),{},{components:n})):r.createElement(m,o({ref:t},u))}));function m(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var a=n.length,o=new Array(a);o[0]=d;var c={};for(var l in t)hasOwnProperty.call(t,l)&&(c[l]=t[l]);c.originalType=e,c[h]="string"==typeof e?e:i,o[1]=c;for(var s=2;s<a;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},5788:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>s});var r=n(7462),i=(n(7294),n(3905));const a={title:"Basic Request Model",sidebar_position:3},o=void 0,c={unversionedId:"architecture/architecture-overview/architecture-request-model",id:"architecture/architecture-overview/architecture-request-model",title:"Basic Request Model",description:"Contracts Overview",source:"@site/docs/oracle/architecture/architecture-overview/architecture-request-model.md",sourceDirName:"architecture/architecture-overview",slug:"/architecture/architecture-overview/architecture-request-model",permalink:"/oracle/architecture/architecture-overview/architecture-request-model",draft:!1,editUrl:"https://github.com/tenet-org/tenet-docs/edit/master/docs/oracle/architecture/architecture-overview/architecture-request-model.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{title:"Basic Request Model",sidebar_position:3},sidebar:"docsSidebar",previous:{title:"Models",permalink:"/oracle/architecture/architecture-overview/"},next:{title:"Decentralized Model",permalink:"/oracle/architecture/architecture-overview/architecture-decentralized-model"}},l={},s=[{value:"Contracts Overview",id:"contracts-overview",level:2},{value:"ChainlinkClient",id:"chainlinkclient",level:3},{value:"LINK Token",id:"link-token",level:3},{value:"Oracle Contract",id:"oracle-contract",level:3},{value:"Request",id:"request",level:4},{value:"Fulfillment",id:"fulfillment",level:4},{value:"Off-Chain Oracle Node",id:"off-chain-oracle-node",level:3}],u={toc:s},h="wrapper";function p(e){let{components:t,...a}=e;return(0,i.kt)(h,(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h2",{id:"contracts-overview"},"Contracts Overview"),(0,i.kt)("p",null,"All source code is open source and available in the ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/smartcontractkit/chainlink"},"Chainlink Github repository"),"."),(0,i.kt)("p",null,(0,i.kt)("img",{alt:"&#39;Chainlink Architecture&#39;",src:n(629).Z,width:"5066",height:"1029"})),(0,i.kt)("h3",{id:"chainlinkclient"},"ChainlinkClient"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/smartcontractkit/chainlink/blob/master/contracts/src/v0.8/ChainlinkClient.sol"},(0,i.kt)("inlineCode",{parentName:"a"},"ChainlinkClient"))," is a parent contract that enables smart contracts to consume data from oracles."),(0,i.kt)("p",null,"The client constructs and makes a request to a known Chainlink oracle through the ",(0,i.kt)("inlineCode",{parentName:"p"},"transferAndCall")," function, implemented by the LINK token. This request contains encoded information that is required for the cycle to succeed. In the ",(0,i.kt)("inlineCode",{parentName:"p"},"ChainlinkClient")," contract, this call is initiated with a call to ",(0,i.kt)("inlineCode",{parentName:"p"},"sendChainlinkRequestTo"),"."),(0,i.kt)("h3",{id:"link-token"},"LINK Token"),(0,i.kt)("p",null,"LINK is an ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/ethereum/EIPs/issues/677"},"ERC-677")," compliant token which implements ",(0,i.kt)("inlineCode",{parentName:"p"},"transferAndCall"),", a function that allows tokens to be transferred whilst also triggering logic in the receiving contract within a single transaction."),(0,i.kt)("h3",{id:"oracle-contract"},"Oracle Contract"),(0,i.kt)("p",null,(0,i.kt)("a",{parentName:"p",href:"https://github.com/smartcontractkit/chainlink/blob/master/contracts/src/v0.6/Oracle.sol"},(0,i.kt)("inlineCode",{parentName:"a"},"Oracle")," contracts")," are owned by oracle node operators, which run alongside off-chain oracle nodes."),(0,i.kt)("h4",{id:"request"},"Request"),(0,i.kt)("p",null,"The client contract that initiates this cycle must create a request with the following items:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"The oracle address."),(0,i.kt)("li",{parentName:"ul"},"The job ID, so the oracle knows which tasks to perform."),(0,i.kt)("li",{parentName:"ul"},"The callback function, which the oracle sends the response to.")),(0,i.kt)("p",null,"Oracle contracts are responsible for handling on-chain requests made through the LINK token, by implementing ",(0,i.kt)("inlineCode",{parentName:"p"},"onTokenTransfer")," as a ",(0,i.kt)("a",{href:"https://github.com/smartcontractkit/chainlink/blob/master/contracts/src/v0.6/LinkTokenReceiver.sol"},(0,i.kt)("inlineCode",{parentName:"p"},"LinkTokenReceiver")),". Upon execution of this function, the oracle contract ",(0,i.kt)("strong",{parentName:"p"},"emits an ",(0,i.kt)("inlineCode",{parentName:"strong"},"OracleRequest")," event")," containing information about the request. This event is crucial, as it is monitored by the off-chain oracle node which acts upon it."),(0,i.kt)("h4",{id:"fulfillment"},"Fulfillment"),(0,i.kt)("p",null,"For fulfillment, the oracle contract has a ",(0,i.kt)("inlineCode",{parentName:"p"},"fulfillOracleRequest")," function which is used by the node to fulfill a request once it has the result of the job. This function returns the result to the ",(0,i.kt)("inlineCode",{parentName:"p"},"ChainlinkClient")," using the callback function defined in the original request."),(0,i.kt)("h3",{id:"off-chain-oracle-node"},"Off-Chain Oracle Node"),(0,i.kt)("p",null,"The off-chain oracle node is responsible for listening for events emitted by its corresponding on-chain smart contract. Once it detects an ",(0,i.kt)("inlineCode",{parentName:"p"},"OracleRequest")," event, it uses the data emitted to perform a job."),(0,i.kt)("p",null,"The most common job type for a Node is to make a GET request to an API, retrieve some data from it, parse the response, convert the result into blockchain compatible data, then submit it in a transaction back to the oracle contract, using the ",(0,i.kt)("inlineCode",{parentName:"p"},"fulfillOracleRequest")," function."))}p.isMDXComponent=!0},629:(e,t,n)=>{n.d(t,{Z:()=>r});const r=n.p+"assets/images/chainlink_architecture-9036ec8dfa8624dcb8d155d681e2c5e0.png"}}]);