"use strict";(self.webpackChunktenet_docs=self.webpackChunktenet_docs||[]).push([[990],{3905:(e,n,t)=>{t.d(n,{Zo:()=>p,kt:()=>g});var a=t(7294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function o(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function i(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?o(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function l(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)t=o[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var d=a.createContext({}),s=function(e){var n=a.useContext(d),t=n;return e&&(t="function"==typeof e?e(n):i(i({},n),e)),t},p=function(e){var n=s(e.components);return a.createElement(d.Provider,{value:n},e.children)},u="mdxType",c={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},m=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,o=e.originalType,d=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),u=s(t),m=r,g=u["".concat(d,".").concat(m)]||u[m]||c[m]||o;return t?a.createElement(g,i(i({ref:n},p),{},{components:t})):a.createElement(g,i({ref:n},p))}));function g(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var o=t.length,i=new Array(o);i[0]=m;var l={};for(var d in n)hasOwnProperty.call(n,d)&&(l[d]=n[d]);l.originalType=e,l[u]="string"==typeof e?e:r,i[1]=l;for(var s=2;s<o;s++)i[s]=t[s];return a.createElement.apply(null,i)}return a.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2320:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>i,default:()=>c,frontMatter:()=>o,metadata:()=>l,toc:()=>s});var a=t(7462),r=(t(7294),t(3905));const o={},i="Alliance Contract",l={unversionedId:"precompiles/alliance-staking",id:"precompiles/alliance-staking",title:"Alliance Contract",description:"Contract address: 0x1559000000000000000000000000000000000002",source:"@site/docs/node/precompiles/alliance-staking.md",sourceDirName:"precompiles",slug:"/precompiles/alliance-staking",permalink:"/tenet-docs/node/precompiles/alliance-staking",draft:!1,editUrl:"https://github.com/tenet-org/tenet-docs/tree/main/docs/node/precompiles/alliance-staking.md",tags:[],version:"current",frontMatter:{},sidebar:"docsSidebar",previous:{title:"Precompiles",permalink:"/tenet-docs/node/category/precompiles"},next:{title:"Staking Contract",permalink:"/tenet-docs/node/precompiles/staking"}},d={},s=[{value:"Delegation",id:"delegation",level:2},{value:"Delegate",id:"delegate",level:2},{value:"Redelegate",id:"redelegate",level:2},{value:"Undelegate",id:"undelegate",level:2},{value:"Claim rewards",id:"claim-rewards",level:2}],p={toc:s},u="wrapper";function c(e){let{components:n,...t}=e;return(0,r.kt)(u,(0,a.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"alliance-contract"},"Alliance Contract"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre",className:"language-solidity"},"// SPDX-License-Identifier: UNLICENSED\n\npragma solidity ^0.8.12;\n\nstruct Coin {\n    address token;\n    uint256 amount;\n}\n\ninterface AllianceStaking {\n    function delegation(\n        address _validator,\n        address _delegator,\n        address _token\n    ) external view returns (uint256 amount);\n\n    function delegate(\n        address _validator,\n        address _token,\n        uint256 _amount\n    ) external returns (uint256 newShares);\n\n    function redelegate(\n        address _fromValidator,\n        address _toValidator,\n        address _token,\n        uint256 _amount\n    ) external returns (uint256 completionTime);\n\n    function undelegate(\n        address _to,\n        address _validator,\n        address _token,\n        uint256 _amount\n    ) external returns (uint256 completionTime);\n\n    function undelegateShares(\n        address _to,\n        address _validator,\n        address _token,\n        uint256 _shares\n    ) external returns (uint256 completionTime);\n\n    function undelegatePortion(\n        address _to,\n        address _validator,\n        address _token,\n        uint256 _portion\n    ) external returns (uint256 completionTime);\n\n    function claimDelegationRewards(\n        address _validator,\n        address _token\n    ) external returns (Coin[] memory coins);\n}\n")),(0,r.kt)("p",null,"Contract address: ",(0,r.kt)("inlineCode",{parentName:"p"},"0x1559000000000000000000000000000000000002")),(0,r.kt)("p",null,"The purpose of this precompile is to deliver opportunity for users and smart contract in Tenet EVM to interact with cosmos-sdk\u2019s Alliance Module."),(0,r.kt)("h2",{id:"delegation"},"Delegation"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function delegation(address _validator, address _delegator, uint256 _token) returns (uint256 amount)")),(0,r.kt)("p",null,"This method queries delegated amount of ",(0,r.kt)("inlineCode",{parentName:"p"},"_token")," by ",(0,r.kt)("inlineCode",{parentName:"p"},"_delegator")," in given ",(0,r.kt)("inlineCode",{parentName:"p"},"_validator"),"."),(0,r.kt)("h2",{id:"delegate"},"Delegate"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function delegate(address _validator, address _token, uint256 _amount)")),(0,r.kt)("p",null,"This method delegates given amount of tokens to given validator in behalf of msg.sender"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"_validator")," - tenet validator address"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"_token")," - address of erc20 token which is both added to alliance and erc20 modules"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"_amount")," - amount of _token to delegate"),(0,r.kt)("h2",{id:"redelegate"},"Redelegate"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function redelegate(address _fromValidator, address _toValidator, address _token, uint256 _amount)")),(0,r.kt)("p",null,"This method redelegates (changes validator of given delegation) ",(0,r.kt)("inlineCode",{parentName:"p"},"_amount")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"_token")," from  ",(0,r.kt)("inlineCode",{parentName:"p"},"_fromValidator")," to ",(0,r.kt)("inlineCode",{parentName:"p"},"_toValidator")," in behalf of ",(0,r.kt)("inlineCode",{parentName:"p"},"msg.sender"),"."),(0,r.kt)("h2",{id:"undelegate"},"Undelegate"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function undelegate(address _to, address _validator, address _token, uint256 _amount)")),(0,r.kt)("p",null,"This method undelegates ",(0,r.kt)("inlineCode",{parentName:"p"},"_amount")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"_token")," from  ",(0,r.kt)("inlineCode",{parentName:"p"},"_validator")," in behalf of msg.sender. Tokens will be granted to msg.sender after UnbondingPeriod."),(0,r.kt)("p",null,"Also you can use ",(0,r.kt)("inlineCode",{parentName:"p"},"undelegateShares")," and ",(0,r.kt)("inlineCode",{parentName:"p"},"undelegatePortion")," instead of basic undelegate. Main difference is that undelegateShares will undelegate given amount of shares (cosmos-sdk\u2019s native units of delegation). undelegatePortion will undelegate given percentage of your delegation (portion is presented as uint256 by multiplying decimal number by 1e18)."),(0,r.kt)("h2",{id:"claim-rewards"},"Claim rewards"),(0,r.kt)("p",null,(0,r.kt)("inlineCode",{parentName:"p"},"function claimDelegationRewards(address _validator, address _token) returns (Coin[] memory coins)")),(0,r.kt)("p",null,"This method claims received rewards from ",(0,r.kt)("inlineCode",{parentName:"p"},"_validator")," of ",(0,r.kt)("inlineCode",{parentName:"p"},"_token")," in behalf of msg.sender."),(0,r.kt)("p",null,"If reward is in base token, then ",(0,r.kt)("inlineCode",{parentName:"p"},"coin.token")," will be ",(0,r.kt)("inlineCode",{parentName:"p"},"address(0)"),"."))}c.isMDXComponent=!0}}]);